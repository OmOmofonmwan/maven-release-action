name: Maven Release Action
description: Utilized for creating releases of projects

# Inputs
inputs:
  branch_name: 
    description: "Current Branch"
    required: true
    default: "main"
  ikmdevops_pat:
    description: "PAT TOKEN for IKMDevops User"
    required: true
  ikmdevops_email:
    description: "Email For IKMDevops User"
    default: 'devops@ikm.dev'
  github_token:
    description: "GitHub Token"
    required: true
  gpg_passphrase:
    description: "GPG Passphrase"
    required: true
  next_snapshot_version:
    description: "Next Dev/Snapshot Version"
    required: true
  release_version:
    description: "Current Release Version"
    required: true
  ossrh_username:
    description: "OSSRH USERNAME"
    required: true
  ossrh_token:
    description: "OSSRH Token"
    required: true
  ossrh_gpg_key:
    description: "OSSRH Key"
    required: true

runs:
  using: "composite" 
  steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        token: ${{inputs.ikmdevops_pat}}

    - name: Print Versions
      shell: bash
      run: |
        echo "Release Version: ${{inputs.release_version}}"
        echo "Next Snapshot Versin: ${{inputs.next_snapshot_version}}"
        echo "RELEASE ENV -- $RELEASE_VERSION"
      env:
         RELEASE_VERSION: ${{inputs.release_version}} 

    - name: Set Release Version
      shell: bash
      run: |
          ./mvnw -B versions:set \
          -DnewVersion=${{inputs.release_version}} \
          -DgenerateBackupPoms=false

    - name: Build Release Version
      shell: bash
      run: |
           ./mvnw clean install \
                --batch-mode \
                -e \
                -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn \
                -PcodeQuality,release-enforcement

    - name: Create tag
      shell: bash
      run: |
           git remote set-url origin https://git:${{inputs.ikmdevops_pat}}@github.com/${{github.repository}}.git
           git pull -p
           git add .
           git config user.name "ikmdevops"
           git config user.email ${{inputs.ikmdevops_email}}
           git commit -m 'Release ${{inputs.release_version}}'
           git tag -a ${{inputs.release_version}} -m '${{inputs.release_version}}' --force

    - name: Set Dev Version
      shell: bash
      run: |
          ./mvnw -B versions:set \
          -DnewVersion=${{inputs.next_snapshot_version}} \
          -DgenerateBackupPoms=false

    - name: Commit & Push
      shell: bash
      run: |
           git add .
           git commit -m 'Set next dev version to ${{inputs.next_snapshot_version}}'
           git push origin HEAD:main
           git push --tags origin


    - name: Create Release
      shell: bash
      id: create_release
      run: |
          curl -L \
           -X POST \
           -H "Accept: application/vnd.github+json" \
           -H "Authorization: Bearer ${{inputs.github_token}}" \
           -H "X-GitHub-Api-Version: 2022-11-28" \
           https://api.github.com/repos/${{github.repository}}/releases \
          -d '{"tag_name":"${{inputs.release_version}}","name":"Release ${{inputs.release_version}}","body":"Release ${{inputs.release_version}}","draft":false,"prerelease":false,"generate_release_notes":false}'

    - name: Checkout Code Repository
      uses: actions/checkout@v4
      with:
        ref: ${{inputs.release_version}}
        server-id: maven-releases
        server-username: OSSRH_USERNAME
        server-password: OSSRH_PASSWORD

    - name: Maven Build
      shell: bash
      run: |
        ./mvnw clean install \
          --batch-mode \
          -e \
          -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn \
          -PcodeQuality

    # - name: Deploy To Nexus
    #   shell: bash
    #   run: |
    #    sudo -u ec2-user bash -c \
    #     'mvn deploy \
    #           --batch-mode \
    #           -e \
    #           -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn \
    #           -DskipTests \
    #           -DskipITs \
    #           -Dmaven.main.skip \
    #           -Dmaven.test.skip \
    #           -s ${{inputs.maven_settings}} \
    #           -DrepositoryId='maven-releases' \
    #           -Dgpg.passphrase=${{inputs.gpg_passphrase}}'




    - name: Publish To OSSRH (Maven Central Staging)
      shell: bash
      run: |
          ./mvnw deploy \
              --batch-mode \
              -e \
              -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn \
              -DskipTests \
              -DskipITs \
              -Dmaven.main.skip \
              -Dmaven.test.skip \
              -DrepositoryId='maven-releases' \
              -DrepositoryIdOSSRH='true' \
              -PstageOSSRH -Dgpg.passphrase=${{inputs.gpg_passphrase}}
      env:
        OSSRH_USERNAME: ${{inputs.ossrh_username}}
        OSSRH_PASSWORD: ${{inputs.ossrh_token}}
        OSSRH_GPG_KEY: ${{inputs.ossrh_gpg_key}}
    

